{"ast":null,"code":"var _jsxFileName = \"/Users/tomdavkam/Desktop/HCS_Comp/HCS-Workshop-1-Final/src/views/Performances/Performances.jsx\";\nimport React, { useState } from \"react\";\nimport \"./Performances.css\";\nimport Vid1 from \"../../assets/Videos/Hoover.mov\";\nimport Vid2 from \"../../assets/Videos/Gounod.mov\";\nimport Vid3 from \"../../assets/Videos/Telemann.mov\";\nimport Vid4 from \"../../assets/Videos/Nielsen.mov\";\nimport Vid5 from \"../../assets/Videos/KE.mov\";\n\nfunction TimeLineItem(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline-item\",\n    onClick: () => {\n      props.setActiveTitle(props.title);\n      props.setActiveVid(props.vid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.title)));\n}\n\nexport default function ExperienceScreen() {\n  const [activeTitle, setActiveTitle] = useState(\"\");\n  const [activeVid, setActiveVid] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimeLineItem, {\n    title: \"1\",\n    description: \"TEST\",\n    vid: Vid1,\n    setActiveTitle: setActiveTitle,\n    setActiveVid: setActiveVid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TimeLineItem, {\n    title: \"1\",\n    description: \"TEST\",\n    vid: Vid1,\n    setActiveTitle: setActiveTitle,\n    setActiveVid: setActiveVid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TimeLineItem, {\n    title: \"1\",\n    description: \"TEST\",\n    vid: Vid1,\n    setActiveTitle: setActiveTitle,\n    setActiveVid: setActiveVid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"highlight-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, activeTitle), /*#__PURE__*/React.createElement(\"video\", {\n    src: activeVid,\n    controls: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Sorry, your browser doesn't support embedded videos.\"))));\n}","map":{"version":3,"sources":["/Users/tomdavkam/Desktop/HCS_Comp/HCS-Workshop-1-Final/src/views/Performances/Performances.jsx"],"names":["React","useState","Vid1","Vid2","Vid3","Vid4","Vid5","TimeLineItem","props","setActiveTitle","title","setActiveVid","vid","ExperienceScreen","activeTitle","activeVid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,KAAK,CAACC,cAAN,CAAqBD,KAAK,CAACE,KAA3B;AACAF,MAAAA,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,GAAzB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACE,KAAX,CADF,CAPF,CADF;AAaD;;AAED,eAAe,SAASG,gBAAT,GAA4B;AACzC,QAAM,CAACC,WAAD,EAAcL,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,SAAD,EAAYJ,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAC,GADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGG,IAAA,GAAG,EAAEC,IAHR;AAIE,IAAA,cAAc,EAAEO,cAJlB;AAKE,IAAA,YAAY,EAAEE,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAC,GADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGG,IAAA,GAAG,EAAET,IAHR;AAIE,IAAA,cAAc,EAAEO,cAJlB;AAKE,IAAA,YAAY,EAAEE,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAC,GADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGG,IAAA,GAAG,EAAET,IAHR;AAIE,IAAA,cAAc,EAAEO,cAJlB;AAKE,IAAA,YAAY,EAAEE,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,eA0BE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,WAAL,CADF,eAEE;AAAO,IAAA,GAAG,EAAEC,SAAZ;AAAuB,IAAA,QAAQ,MAA/B;AAAgC,IAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAFF,CA1BF,CADF,CADF;AAqCD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Performances.css\";\nimport Vid1 from \"../../assets/Videos/Hoover.mov\";\nimport Vid2 from \"../../assets/Videos/Gounod.mov\";\nimport Vid3 from \"../../assets/Videos/Telemann.mov\";\nimport Vid4 from \"../../assets/Videos/Nielsen.mov\";\nimport Vid5 from \"../../assets/Videos/KE.mov\";\n\nfunction TimeLineItem(props) {\n  return (\n    <div\n      className=\"timeline-item\"\n      onClick={() => {\n        props.setActiveTitle(props.title);\n        props.setActiveVid(props.vid);\n      }}\n    >\n      <div className=\"experience-info\">\n        <h4>{props.title}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default function ExperienceScreen() {\n  const [activeTitle, setActiveTitle] = useState(\"\");\n  const [activeVid, setActiveVid] = useState(\"\");\n\n  return (\n    <div className=\"screen-background\">\n      <div className=\"experience-background\">\n        <div className=\"timeline-background\">\n          <TimeLineItem\n            title=\"1\"\n            description=\"TEST\"\n             vid={Vid1}\n            setActiveTitle={setActiveTitle}\n            setActiveVid={setActiveVid}\n          />\n          \n          <TimeLineItem\n            title=\"1\"\n            description=\"TEST\"\n             vid={Vid1}\n            setActiveTitle={setActiveTitle}\n            setActiveVid={setActiveVid}\n          />\n\n          <TimeLineItem\n            title=\"1\"\n            description=\"TEST\"\n             vid={Vid1}\n            setActiveTitle={setActiveTitle}\n            setActiveVid={setActiveVid}\n          />  \n        </div>\n        <div className=\"highlight-background\">\n          <h1>{activeTitle}</h1>\n          <video src={activeVid} controls width=\"400\">\n            Sorry, your browser doesn't support embedded videos.\n          </video>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}